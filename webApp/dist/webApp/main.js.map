{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/models/message.ts","./src/app/models/user.ts","./src/app/service/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAGvD,MAAM,MAAM,GAAW,EACtB,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AAEL;AACM;;;;;;IC8FrC,qEAAsC;IAAA,uDAAsC;IAAA,4DAAK;;;IAA3C,0DAAsC;IAAtC,oHAAsC;;ADtF3E,MAAM,YAAY;IAUvB,YAAoB,OAAoB;QAApB,YAAO,GAAP,OAAO,CAAa;QATxC,UAAK,GAAG,QAAQ,CAAC;IAS0B,CAAC;IAC5C,QAAQ;QACN,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,eAAe,GAAG,IAAI,iDAAI,EAAE,CAAC;QAClC,IAAI,CAAC,mBAAmB,GAAG,IAAI,iDAAI,EAAE,CAAC;QACtC,IAAI,CAAC,aAAa,GAAG,IAAI,uDAAO,EAAE,CAAC;IACrC,CAAC;IAED,SAAS,CAAC,IAAa;QACrB,YAAY,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACnD,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YACrD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;YACtE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACrB,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,WAAW,CAAC,GAAG,EAAE;gBACf,IAAI,CAAC,UAAU,EAAE,CAAC;YACpB,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,IAAa;QACzB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACvD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS,CAAC,IAAa;QACrB,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,mBAAmB,GAAG,IAAI,iDAAI,EAAE,CAAC;SACvC;IACH,CAAC;IAED,UAAU;QACR,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC7C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC1C,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,IAAa;QACtB,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;QACnE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC1D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;;wEA5DU,YAAY;4FAAZ,YAAY;;QCZzB,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,qEAAI;QAAA,gEAAK;QAAA,4DAAK;QACd,6EACE;QADuB,qRAAY,kBAAmB,IAAC;QACvD,yEACE;QAAA,2EAAgC;QAAA,mEAAQ;QAAA,4DAAQ;QAChD,+EAQF;QAFI,+LAAkC;QANpC,4DAQF;QAAA,4DAAM;QACN,0EACE;QAAA,4EAAmC;QAAA,oEAAQ;QAAA,4DAAQ;QACnD,iFASF;QAFI,mMAAsC;QAPxC,4DASF;QAAA,4DAAM;QACN,8EAA8C;QAAA,iEAAK;QAAA,4DAAS;QAC9D,4DAAO;QACT,4DAAM;QACN,0EACE;QAAA,sEAAI;QAAA,qEAAS;QAAA,4DAAK;QAClB,+EACE;QADwB,uRAAY,sBAAwB,IAAC;QAC7D,0EACE;QAAA,4EAAgC;QAAA,oEAAQ;QAAA,4DAAQ;QAChD,+EAQF;QAFI,mMAAsC;QANxC,4DAQF;QAAA,4DAAM;QACN,0EACE;QAAA,4EAAmC;QAAA,oEAAQ;QAAA,4DAAQ;QACnD,iFASF;QAFI,uMAA0C;QAP5C,4DASF;QAAA,4DAAM;QACN,8EAA8C;QAAA,qEAAS;QAAA,4DAAS;QAClE,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,2EACE;QAAA,0EACE;QAAA,0EACE;QAAA,2EACE;QAAA,wDACF;QAAA,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,0EACE;QAAA,2EACE;QAAA,yEAAO;QAAA,qEAAS;QAAA,4DAAQ;QACxB,+EACE;QAD0B,uRAAY,mBAAuB,IAAC;QAC9D,0EACE;QAAA,gFAQA;QAFE,gMAAmC;QANrC,4DAQA;QAAA,8EAAgD;QAAA,oEAAQ;QAAA,4DAAS;QACnE,4DAAM;QACR,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,2EACE;QAAA,0EACE;QAAA,2EACE;QAAA,yEAAO;QAAA,iEAAK;QAAA,4DAAQ;QACpB,yGAAsC;QACxC,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAxFM,2DAAkC;QAAlC,6FAAkC;QAYlC,0DAAsC;QAAtC,iGAAsC;QAiBtC,2DAAsC;QAAtC,iGAAsC;QAYtC,0DAA0C;QAA1C,qGAA0C;QAa9C,0DACF;QADE,wHACF;QAiBM,0DAAmC;QAAnC,8FAAmC;QAarC,0DAAiC;QAAjC,iFAAiC;;6FDtF9B,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACI;AACW;AAEA;AACT;;AAexC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,0DAAW;SACZ;mIAIU,SAAS,mBAXlB,2DAAY,aAGZ,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,0DAAW;6FAKF,SAAS;cAbrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,qEAAgB;oBAChB,0DAAW;iBACZ;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACpBD;AAAA;AAAO,MAAM,OAAO;IAIZ,YAAa,IAAI,GAAE,EAAE,EAAE,OAAO,GAAG,EAAE;QAC/B,IAAI,CAAC,IAAI,GAAE,IAAI;YACf,IAAI,CAAC,OAAO,GAAG,OAAO;IAC1B,CAAC;CAER;;;;;;;;;;;;;ACTD;AAAA;AAAO,MAAM,IAAI;IAIb,YAAY,IAAI,GAAG,EAAE,EAAE,QAAQ,GAAG,EAAE;QAChC,IAAI,CAAC,IAAI,GAAG,IAAI;YAChB,IAAI,CAAC,QAAQ,GAAG,QAAQ;IAC5B,CAAC;CACJ;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAA2C;;;AAQpC,MAAM,WAAW;IAGtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAD3B,QAAG,GAAG,+BAA+B;IACN,CAAC;IAEzC,aAAa,CAAC,IAAU;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,WAAW,EAAE,IAAI,CAAC,CAAC;IACtD,CAAC;IAED,gBAAgB,CAAC,OAAgB;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,SAAS,EAAE,OAAO,CAAC,CAAC;IACvD,CAAC;IAED,SAAS,CAAC,IAAU;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,OAAO,EAAE,IAAI,CAAC,CAAC;IAClD,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;IACzD,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAK,kCAAkC,CAAC,CAAC;IAC/D,CAAC;;sEAvBU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\n\nconst routes: Routes = [\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { error } from '@angular/compiler/src/util';\nimport { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { User } from './models/user';\nimport { Message } from './models/message';\nimport { UserService } from './service/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'webApp';\n  selectUserLogin: User;\n  selectUserRegistrer: User;\n  selectMessage: Message;\n  messages:Message[];\n  loginBool: Boolean;\n  nameUserLogin: String;\n  server: Number;\n\n  constructor(private service: UserService) {}\n  ngOnInit() {\n    this.nameUserLogin = '';\n    this.server = 1;\n    this.loginBool = false;\n    this.selectUserLogin = new User();\n    this.selectUserRegistrer = new User();\n    this.selectMessage = new Message();\n  }\n\n  loginUser(form?: NgForm) {\n    localStorage.clear();\n    this.service.userLogin(form.value).subscribe((res) => {\n      localStorage.setItem('usuario', JSON.stringify(res));\n      this.nameUserLogin = JSON.parse(localStorage.getItem('usuario')).user;\n      this.resetForm(form);\n      this.peticiones();\n      setInterval(() => {\n        this.peticiones();\n      }, 5000);\n    });\n  }\n\n  registrerUser(form?: NgForm) {\n    this.service.userRegistrer(form.value).subscribe((res) => {\n      this.resetForm(form);\n    });\n  }\n\n  resetForm(form?: NgForm) {\n    if (form) {\n      form.reset();\n      this.selectUserRegistrer = new User();\n    }\n  }\n\n  peticiones() {\n    this.service.serverCurrent().subscribe((res) => {\n      console.log(res);\n    });\n    this.service.getMesages().subscribe((res) => {\n      this.messages = res;\n    });\n  }\n\n  insertNote(form?: NgForm) {\n    form.value.user = JSON.parse(localStorage.getItem('usuario')).user;\n    this.service.messageRegistrer(form.value).subscribe((res) => {\n      this.resetForm(form);\n    });\n  }\n}\n","<div class=\"container global\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm\">\r\n      <h3>Login</h3>\r\n      <form #userForm=\"ngForm\" (ngSubmit)=\"loginUser(userForm)\">\r\n        <div class=\"form-group\">\r\n          <label for=\"exampleInputEmail1\">UserName</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            placeholder=\"Enter your username\"\r\n            name=\"user\"\r\n            #user=\"ngModel\"\r\n            [(ngModel)]=\"selectUserLogin.user\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"exampleInputPassword1\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            id=\"exampleInputPassword1\"\r\n            placeholder=\"Enter your Password\"\r\n            name=\"password\"\r\n            #password=\"ngModel\"\r\n            [(ngModel)]=\"selectUserLogin.password\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary\">Login</button>\r\n      </form>\r\n    </div>\r\n    <div class=\"col-sm\">\r\n      <h3>Registrer</h3>\r\n      <form #userFormR=\"ngForm\" (ngSubmit)=\"registrerUser(userFormR)\">\r\n        <div class=\"form-group\">\r\n          <label for=\"exampleInputEmail1\">UserName</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            placeholder=\"Enter your username\"\r\n            name=\"user\"\r\n            #user=\"ngModel\"\r\n            [(ngModel)]=\"selectUserRegistrer.user\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"exampleInputPassword1\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            id=\"exampleInputPassword1\"\r\n            placeholder=\"Enter your Password\"\r\n            name=\"password\"\r\n            #password=\"ngModel\"\r\n            [(ngModel)]=\"selectUserRegistrer.password\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary\">Registrer</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"container global name\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm\">\r\n      <div class=\"alert alert-success\" role=\"alert\">\r\n        {{ nameUserLogin }} Container {{ server }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"container global\">\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n      <label>Add Notes</label>      \r\n      <form #messageForm=\"ngForm\" (ngSubmit)=\"insertNote(messageForm)\">\r\n        <div class=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control2\"\r\n            placeholder=\"Message\"\r\n            name=\"message\"\r\n            #user=\"ngModel\"\r\n            [(ngModel)]=\"selectMessage.message\"\r\n          />\r\n          <button type=\"submit\" class=\"btn btn-secundary\">Add Note</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"container messages\">\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n      <label>Notes</label>      \r\n      <li *ngFor=\"let message of messages;\">{{message.message}} - {{message.user}}</li>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport  { FormsModule } from '@angular/forms'\nimport  { HttpClientModule } from '@angular/common/http'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Message {\n        user: string;\n        message: string;\n    \n        constructor( user= '', message = ''){\n            this.user= user,\n            this.message = message\n        }\n    \n}\n","export class User {\n    user: string;\n    password: string;\n\n    constructor(user = '', password = ''){\n        this.user = user,\n        this.password = password\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { User } from '../models/user';\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  readonly url = 'http://34.121.97.1:3000/user/'\n  constructor(private http: HttpClient) { }\n\n  userRegistrer(user: User){\n    return this.http.post(this.url + 'registrer', user);\n  }\n\n  messageRegistrer(message: Message){\n    return this.http.post(this.url + 'message', message);\n  }\n\n  userLogin(user: User){\n    return this.http.post(this.url + 'login', user);\n  }\n\n  serverCurrent(){\n    return this.http.get('http://34.121.97.1:3000/server');\n  }\n\n  getMesages(){\n    return this.http.get<[]>('http://34.121.97.1:3000/messages');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}